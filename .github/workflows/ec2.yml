name: AWS-EC2 Instance CD

on:
  workflow_run:
    workflows: ["Node.js CI"]
    types: [completed]
  workflow_dispatch:

jobs:
  deploy:
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS credentials (with session token)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token:     ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region:            ${{ secrets.AWS_REGION }}

      - name: Send SSM redeploy command
        run: |
          REDEPLOY_CMD='cd /home/ubuntu && \
            (sudo docker compose pull || sudo docker-compose pull) && \
            (sudo docker compose up -d || sudo docker-compose up -d) && \
            sudo docker image prune -af'

          CMD_ID=$(aws ssm send-command \
            --targets "Key=instanceIds,Values=${{ secrets.AWS_INSTANCE_ID }}" \
            --document-name "AWS-RunShellScript" \
            --comment "Redeploy BookPortal via docker-compose" \
            --parameters "commands=$REDEPLOY_CMD" \
            --region ${{ secrets.AWS_REGION }} \
            --query "Command.CommandId" \
            --output text)

          echo "Sent redeploy command with ID: $CMD_ID"
          aws ssm wait command-executed \
            --command-id "$CMD_ID" \
            --instance-id "${{ secrets.AWS_INSTANCE_ID }}" \
            --region ${{ secrets.AWS_REGION }}

          aws ssm get-command-invocation \
            --command-id "$CMD_ID" \
            --instance-id "${{ secrets.AWS_INSTANCE_ID }}" \
            --region ${{ secrets.AWS_REGION }} \
            --query "{Status:Status, StdOut:StandardOutputContent, StdErr:StandardErrorContent}" \
            --output table